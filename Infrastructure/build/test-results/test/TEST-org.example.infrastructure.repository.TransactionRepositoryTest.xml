<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.example.infrastructure.repository.TransactionRepositoryTest" tests="4" skipped="0" failures="0" errors="0" timestamp="2024-05-15T00:15:03" hostname="DANIEL-PC" time="1.109">
  <properties/>
  <testcase name="findByIdAndStatusWithNotExistingDataReturnOptionalEmpty()" classname="org.example.infrastructure.repository.TransactionRepositoryTest" time="0.977"/>
  <testcase name="createTransactionWithValidDataReturnTransactionEntity()" classname="org.example.infrastructure.repository.TransactionRepositoryTest" time="0.081"/>
  <testcase name="findAllWithExistingData()" classname="org.example.infrastructure.repository.TransactionRepositoryTest" time="0.032"/>
  <testcase name="findByIdAndStatusWithExistingDataReturnTransactionEntity()" classname="org.example.infrastructure.repository.TransactionRepositoryTest" time="0.012"/>
  <system-out><![CDATA[21:14:57.030 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [org.example.infrastructure.repository.TransactionRepositoryTest]: TransactionRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
21:14:57.232 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration org.example.infrastructure.Main for test class org.example.infrastructure.repository.TransactionRepositoryTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.3)

2024-05-14T21:14:57.985-03:00  INFO 12708 --- [    Test worker] o.e.i.r.TransactionRepositoryTest        : Starting TransactionRepositoryTest using Java 17.0.7 with PID 12708 (started by daniel in C:\Users\daniel\MeusProjetos\TesteTecnico\Tools_Java_Challenge_B\Infrastructure)
2024-05-14T21:14:57.987-03:00  INFO 12708 --- [    Test worker] o.e.i.r.TransactionRepositoryTest        : The following 1 profile is active: "local"
2024-05-14T21:14:58.665-03:00  INFO 12708 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-05-14T21:14:58.814-03:00  INFO 12708 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 118 ms. Found 1 JPA repository interfaces.
2024-05-14T21:14:58.930-03:00  INFO 12708 --- [    Test worker] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2024-05-14T21:14:59.288-03:00  INFO 12708 --- [    Test worker] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:25aca9be-7d8a-4ec8-bc5a-d55defb04d0e;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2024-05-14T21:14:59.645-03:00  INFO 12708 --- [    Test worker] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.16.3 by Redgate
2024-05-14T21:14:59.645-03:00  INFO 12708 --- [    Test worker] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2024-05-14T21:14:59.646-03:00  INFO 12708 --- [    Test worker] o.f.c.internal.license.VersionPrinter    : 
2024-05-14T21:14:59.668-03:00  INFO 12708 --- [    Test worker] o.f.c.i.database.base.BaseDatabaseType   : Database: jdbc:h2:mem:25aca9be-7d8a-4ec8-bc5a-d55defb04d0e (H2 2.1)
2024-05-14T21:14:59.744-03:00  INFO 12708 --- [    Test worker] o.f.c.i.s.JdbcTableSchemaHistory         : Schema history table "PUBLIC"."flyway_schema_history" does not exist yet
2024-05-14T21:14:59.753-03:00  INFO 12708 --- [    Test worker] o.f.core.internal.command.DbValidate     : Successfully validated 1 migration (execution time 00:00.028s)
2024-05-14T21:14:59.762-03:00  INFO 12708 --- [    Test worker] o.f.c.i.s.JdbcTableSchemaHistory         : Creating Schema History table "PUBLIC"."flyway_schema_history" ...
2024-05-14T21:14:59.790-03:00  INFO 12708 --- [    Test worker] o.f.core.internal.command.DbMigrate      : Current version of schema "PUBLIC": << Empty Schema >>
2024-05-14T21:14:59.797-03:00  INFO 12708 --- [    Test worker] o.f.core.internal.command.DbMigrate      : Migrating schema "PUBLIC" to version "1 - CREATE TABLE TRANSACTIONS"
2024-05-14T21:14:59.811-03:00  INFO 12708 --- [    Test worker] o.f.core.internal.command.DbMigrate      : Successfully applied 1 migration to schema "PUBLIC", now at version v1 (execution time 00:00.022s)
2024-05-14T21:14:59.955-03:00  INFO 12708 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-05-14T21:15:00.067-03:00  INFO 12708 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.2.7.Final
2024-05-14T21:15:00.072-03:00  INFO 12708 --- [    Test worker] org.hibernate.cfg.Environment            : HHH000406: Using bytecode reflection optimizer
2024-05-14T21:15:00.298-03:00  INFO 12708 --- [    Test worker] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2024-05-14T21:15:00.528-03:00  INFO 12708 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-05-14T21:15:01.004-03:00  INFO 12708 --- [    Test worker] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2024-05-14T21:15:01.899-03:00  INFO 12708 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: 
    alter table if exists Transactions 
       alter column authorizationCode set data type varchar(255)
Hibernate: 
    alter table if exists Transactions 
       alter column card set data type varchar(255)
Hibernate: 
    alter table if exists Transactions 
       alter column dateTime set data type timestamp(6)
Hibernate: 
    alter table if exists Transactions 
       alter column establishment set data type varchar(255)
Hibernate: 
    alter table if exists Transactions 
       alter column invoces set data type varchar(255)
Hibernate: 
    alter table if exists Transactions 
       alter column nsu set data type varchar(255)
Hibernate: 
    alter table if exists Transactions 
       alter column status set data type varchar(255)
Hibernate: 
    alter table if exists Transactions 
       alter column paymentType set data type varchar(255)
Hibernate: 
    alter table if exists Transactions 
       alter column paymentValue set data type numeric(38,2)
2024-05-14T21:15:01.955-03:00  INFO 12708 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-05-14T21:15:02.455-03:00  INFO 12708 --- [    Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-05-14T21:15:03.120-03:00  INFO 12708 --- [    Test worker] o.e.i.r.TransactionRepositoryTest        : Started TransactionRepositoryTest in 5.754 seconds (process running for 7.6)
Hibernate: 
    select
        t1_0.id,
        t1_0.authorizationCode,
        t1_0.card,
        t1_0.dateTime,
        t1_0.establishment,
        t1_0.invoces,
        t1_0.nsu,
        t1_0.status,
        t1_0.paymentType,
        t1_0.paymentValue 
    from
        Transactions t1_0 
    where
        t1_0.id=? 
        and t1_0.status=?
Hibernate: 
    insert 
    into
        Transactions
        (authorizationCode,card,dateTime,establishment,invoces,nsu,status,paymentType,paymentValue,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        Transactions
        (authorizationCode,card,dateTime,establishment,invoces,nsu,status,paymentType,paymentValue,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        t1_0.id,
        t1_0.authorizationCode,
        t1_0.card,
        t1_0.dateTime,
        t1_0.establishment,
        t1_0.invoces,
        t1_0.nsu,
        t1_0.status,
        t1_0.paymentType,
        t1_0.paymentValue 
    from
        Transactions t1_0 
    where
        t1_0.status='AUTORIZADO'
Hibernate: 
    insert 
    into
        Transactions
        (authorizationCode,card,dateTime,establishment,invoces,nsu,status,paymentType,paymentValue,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        t1_0.id,
        t1_0.authorizationCode,
        t1_0.card,
        t1_0.dateTime,
        t1_0.establishment,
        t1_0.invoces,
        t1_0.nsu,
        t1_0.status,
        t1_0.paymentType,
        t1_0.paymentValue 
    from
        Transactions t1_0 
    where
        t1_0.id=? 
        and t1_0.status=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
